{
	"info": {
		"_postman_id": "62177a60-4e56-49d4-9709-fb3175692825",
		"name": "otus_l4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "userservice",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Создания пользователя\", function () {",
									"    pm.expect(pm.response.code).to.eq(201);",
									"    pm.collectionVariables.set(\"id\", pm.response.text());",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user-service/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user-service",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Поиск пользователя по id\", function () {",
									"    pm.expect(pm.response.code).to.eq(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user-service/user/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user-service",
								"user",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Обновление пользователя по id\", function () {",
									"    pm.expect(pm.response.code).to.eq(200);",
									"    ",
									"    let savedData = pm.request.body.raw;",
									"    pm.collectionVariables.set(\"putData\", savedData);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user-service/user/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user-service",
								"user",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "checkPut",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка обновления пользователя\", function () {",
									"    pm.expect(pm.response.code).to.eq(200);",
									"    ",
									"    let expectData = JSON.parse(pm.collectionVariables.get(\"putData\"));",
									"    let actualData = pm.response.json();",
									"",
									"    // Добавляем id, так как гет возвращает данные с id",
									"    expectData.id = Number(pm.collectionVariables.get(\"id\"));",
									"    pm.expect(expectData).to.eql(actualData);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user-service/user/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user-service",
								"user",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Удаление пользователя\", function() {",
									"    pm.expect(pm.response.code).to.eq(204);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/user-service/user/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user-service",
								"user",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "userNotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = JSON.parse('{\"code\":0,\"message\":\"Пользователь не найден\"}');",
									"pm.test(\"Проверка получения несуществующего пользователя\", function () {",
									"    pm.expect(pm.response.code).to.eq(400);",
									"",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.eql(response);",
									"",
									"    // Удаление всех переменных",
									"    pm.collectionVariables.unset(\"id\");",
									"    pm.collectionVariables.unset(\"putData\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user-service/user/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user-service",
								"user",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://arch.homework",
			"type": "default"
		},
		{
			"key": "id",
			"value": ""
		}
	]
}